#Network packet Analyzer


from scapy.all import sniff, IP, TCP, UDP, Raw

# Function to process captured packets
def packet_callback(packet):
    print("\n--- New Packet ---")
    
    if IP in packet:
        ip_layer = packet[IP]
        print(f"Source IP: {ip_layer.src}")
        print(f"Destination IP: {ip_layer.dst}")
        print(f"Protocol: {ip_layer.proto}")

        # Check if TCP or UDP
        if TCP in packet:
            print("Protocol Type: TCP")
            print(f"Source Port: {packet[TCP].sport}")
            print(f"Destination Port: {packet[TCP].dport}")

        elif UDP in packet:
            print("Protocol Type: UDP")
            print(f"Source Port: {packet[UDP].sport}")
            print(f"Destination Port: {packet[UDP].dport}")

        # Print payload if available
        if Raw in packet:
            payload_data = packet[Raw].load
            try:
                print(f"Payload: {payload_data.decode(errors='ignore')}")
            except:
                print(f"Payload (raw): {payload_data}")

# Start sniffing (Ctrl+C to stop)
print("Starting packet sniffer... (Press Ctrl+C to stop)")
sniff(prn=packet_callback, store=False)
